// Code generated by goa v3.20.0, DO NOT EDIT.
//
// Result HTTP client types
//
// Command:
// $ goa gen github.com/ynoacamino/alert-go/design

package client

import (
	result "github.com/ynoacamino/alert-go/gen/result"
	resultviews "github.com/ynoacamino/alert-go/gen/result/views"
	goa "goa.design/goa/v3/pkg"
)

// CreateResultRequestBody is the type of the "Result" service "createResult"
// endpoint HTTP request body.
type CreateResultRequestBody struct {
	// Status result of scrape
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// ListResultsResponseBody is the type of the "Result" service "listResults"
// endpoint HTTP response body.
type ListResultsResponseBody struct {
	Data []*ResultResponseBody `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	// Page number
	Page *int `form:"page,omitempty" json:"page,omitempty" xml:"page,omitempty"`
	// Items per page
	Limit *int `form:"limit,omitempty" json:"limit,omitempty" xml:"limit,omitempty"`
	// Total number of results
	Total *int `form:"total,omitempty" json:"total,omitempty" xml:"total,omitempty"`
}

// CreateResultResponseBody is the type of the "Result" service "createResult"
// endpoint HTTP response body.
type CreateResultResponseBody struct {
	// Unique result ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Created at date of scrape
	CreatedAt *string `form:"createdAt,omitempty" json:"createdAt,omitempty" xml:"createdAt,omitempty"`
	// Updated at date of scrape
	UpdateAt *string `form:"updateAt,omitempty" json:"updateAt,omitempty" xml:"updateAt,omitempty"`
	// Status result of scrape
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// ResultResponseBody is used to define fields on response body types.
type ResultResponseBody struct {
	// Unique result ID
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Created at date of scrape
	CreatedAt *string `form:"createdAt,omitempty" json:"createdAt,omitempty" xml:"createdAt,omitempty"`
	// Updated at date of scrape
	UpdateAt *string `form:"updateAt,omitempty" json:"updateAt,omitempty" xml:"updateAt,omitempty"`
	// Status result of scrape
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// NewCreateResultRequestBody builds the HTTP request body from the payload of
// the "createResult" endpoint of the "Result" service.
func NewCreateResultRequestBody(p *result.ResultPayload) *CreateResultRequestBody {
	body := &CreateResultRequestBody{
		Status: p.Status,
	}
	return body
}

// NewListResultsResultlistOK builds a "Result" service "listResults" endpoint
// result from a HTTP "OK" response.
func NewListResultsResultlistOK(body *ListResultsResponseBody) *resultviews.ResultlistView {
	v := &resultviews.ResultlistView{
		Page:  body.Page,
		Limit: body.Limit,
		Total: body.Total,
	}
	v.Data = make([]*resultviews.ResultView, len(body.Data))
	for i, val := range body.Data {
		v.Data[i] = unmarshalResultResponseBodyToResultviewsResultView(val)
	}

	return v
}

// NewCreateResultResultCreated builds a "Result" service "createResult"
// endpoint result from a HTTP "Created" response.
func NewCreateResultResultCreated(body *CreateResultResponseBody) *result.Result {
	v := &result.Result{
		ID:        *body.ID,
		CreatedAt: *body.CreatedAt,
		UpdateAt:  *body.UpdateAt,
		Status:    *body.Status,
	}

	return v
}

// ValidateCreateResultResponseBody runs the validations defined on
// CreateResultResponseBody
func ValidateCreateResultResponseBody(body *CreateResultResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.CreatedAt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("createdAt", "body"))
	}
	if body.UpdateAt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("updateAt", "body"))
	}
	return
}

// ValidateResultResponseBody runs the validations defined on ResultResponseBody
func ValidateResultResponseBody(body *ResultResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.CreatedAt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("createdAt", "body"))
	}
	if body.UpdateAt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("updateAt", "body"))
	}
	return
}
