// Code generated by goa v3.20.0, DO NOT EDIT.
//
// Result endpoints
//
// Command:
// $ goa gen github.com/ynoacamino/alert-go/design

package result

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Result" service endpoints.
type Endpoints struct {
	ListResults  goa.Endpoint
	CreateResult goa.Endpoint
}

// NewEndpoints wraps the methods of the "Result" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		ListResults:  NewListResultsEndpoint(s),
		CreateResult: NewCreateResultEndpoint(s),
	}
}

// Use applies the given middleware to all the "Result" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.ListResults = m(e.ListResults)
	e.CreateResult = m(e.CreateResult)
}

// NewListResultsEndpoint returns an endpoint function that calls the method
// "listResults" of service "Result".
func NewListResultsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListResultsPayload)
		res, err := s.ListResults(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedResultlist(res, "default")
		return vres, nil
	}
}

// NewCreateResultEndpoint returns an endpoint function that calls the method
// "createResult" of service "Result".
func NewCreateResultEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ResultPayload)
		return s.CreateResult(ctx, p)
	}
}
